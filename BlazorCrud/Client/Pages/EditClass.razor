@page "/editClass/{ClassID:int}"
@using BlazorCrud.Shared.Models
@inject HttpClient Http
@inject NavigationManager urlNavigationManager
@using BlazorDateRangePicker

<h2>Edit Class</h2>
<hr />

<EditForm Model="@Class" OnValidSubmit="UpdateClass">
    <DataAnnotationsValidator />
    <div class="form-group row">
        <label class="control-label col-md-12"> Date</label>
        <div class="col-md-4">
            <DateRangePicker SingleDatePicker="true"
                             Drops="DropsType.Up"
                             OnSelectionStart="OnSelectionStart"
                             DateFormat="MMM dd yyyy"
                             placeholder="Select Date..." />

        </div>
        <ValidationMessage For="@(() => Class.ClassDate)" />
    </div>


    <div class="form-group row">
        <label class="control-label col-md-12">Start Time</label>
        <div class="col-md-4">
            <input type="time" @bind-value="Class.ClassStartTime" />
        </div>
        <ValidationMessage For="@(() => Class.ClassStartTime)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">End Time</label>
        <div class="col-md-4">
            <input type="time" @bind-value="Class.ClassEndTime" />
        </div>
        <ValidationMessage For="@(() => Class.ClassEndTime)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">Student</label>
        <div class="col-md-4">
            <input class="form-control" @bind="Class.ClassStudent" />
        </div>
        <ValidationMessage For="@(() => Class.ClassStudent)" />
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">School</label>
        <div class="col-md-4">
            <select class="form-control" @bind="Class.ClassSchool">
                <option value="">-- Select School --</option>
                <option value="YongKang">YongKang</option>
                <option value="Chongsyue">Chongsyue</option>
            </select>
        </div>
        <ValidationMessage For="@(() => Class.ClassSchool)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ClassID { get; set; }

    public void OnSelectionStart(DateTimeOffset date)
    {
        Class.ClassDate = date;

    }


    Class Class = new Class();

    protected override async Task OnInitializedAsync()
    {
        Class = await Http.GetJsonAsync<Class>("/api/Class/Details/" + ClassID);
    }

    protected async Task UpdateClass()
    {
        await Http.SendJsonAsync(HttpMethod.Put, "api/Class/Edit", Class);
        urlNavigationManager.NavigateTo("/fetchClass");
    }

    void Cancel()
    {
        urlNavigationManager.NavigateTo("/fetchClass");
    }
}