@page "/"
@using BlazorColorPicker
@using BlazorCrud.Client.Shared
@using BlazorDateRangePicker
@using BlazorCrud.Shared.Models
@inject HttpClient Http







<h1>Welcome to Camp of Blazes</h1>

Carter smells...

<a href="https://www.newsweek.com/rabid-skunk-massachusetts-mother-1458696">
    <img src="https://d.newsweek.com/en/full/1526562/skunk.webp?w=790&f=837816cdd09d1c0ad986949af0578422" style="width: 25vw; min-width: 100px;" />
</a>

<hr />
Test out this handy date range picker...


<DateRangePicker @ref="Picker"
                 Drops="DropsType.Up"
                 OnRangeSelect="OnRangeSelect"
                 DateFormat="MMM dd yyyy"
                 placeholder="Select Dates..." />

<hr />

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        -- Select Teacher --
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

        @* @foreach (var emp in empList)
        {
            <a class="dropdown-item" href="#">@emp.TeacherName</a>
        }*@
    </div>
    </div>

    @if (events.Count > 0)
    {
        <h6 class="pt-2">Events:</h6>
    }
    @foreach (var e in events)
    {
        <div class="alert alert-secondary" role="alert"><small>@e.Item2</small></div>
    }

    @code {
        DateRangePicker Picker;


        List<(DateTime, string)> events { get; set; } = new List<(DateTime, string)>();



        public void OnRangeSelect(DateRange range)
        {
            events.Add((DateTime.Now, $"Carter has smelt for a long time... though from {range.Start.ToString("MMM dd yyyy")} to {range.End.ToString("MMM dd yyyy")} the odour will be particularly atrocious."));
        }
        Teacher[] empList;

        protected override async Task OnInitializedAsync()
        {
            empList = await Http.GetJsonAsync<Teacher[]>("/api/Teacher/All");
        }
    }








